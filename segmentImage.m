function [BW,maskedImage] = segmentImage(X)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 05-Nov-2021
%----------------------------------------------------


% Adjust data to span data range.
X = imadjust(X);

% Graph cut
foregroundInd
backgroundInd = [53198 126643 159612 182092 192581 195579 203070 215059 225540 239022 248923 252502 268986 280975 282473 283390 294460 304949 315438 319357 327425 337914 348403 357389 361321 364874 375356 387339 394827 398782 403814 408305 411297 411299 414294 414296 425753 425755 439233 451216 461698 470678 481162 487149 488649 494636 500623 508110 517099 518598 530585 530587 538076 547067 563554 563556 577045 587534 593525 598019 601015 607012 610006 612999 613001 617493 620481 620486 623475 626470 630961 636953 639948 645942 647439 650435 656431 659426 660920 660922 663919 672908 677400 677402 974981 1054366 1067841 1087306 1105275 1105279 1120253 1130735 1138216 1147205 1153194 1154684 1160665 1160673 1163656 1163660 1166634 1166643 1166652 1168085 1168089 1168092 1168099 1168105 1168114 1168123 1171070 1171076 1171078 1171079 1171081 1171083 1174063 1174067 1177057 1177059 1180052 1184543 1187536 1193525 1196515 1196517 1199508 1204003 1209986 1209988 1209993 1212986 1610981 1615448 1615452 1621428 1631888 1640848 1645313 1654286 1657233 1657246 1657266 1660211 1660213 1660220 1661705 1664698 1664702 1667693 1670685 1675176 1681165 1687151 1687152 1689988 1691488 1691490 1691493 1691501 1691636 1694508 1694515 1697525 1700532 1700623 1703539 1703541 1706546 1706609 1708048 1708050 1708083 1708094 1711052 1711056 1711061 1711067 1711070 1711072 1711078 2237950 2243740 2243742 2243755 2243769 2243784 2243786 2246722 2246806 2246831 2246833 2246859 2246884 2246888 2251205 2257184 2259668 2259670 2259688 2259705 2259723 2259725 2259741 2259760 2259780 2261282 2261667 2264134 2264150 2264300 2264318 2264338 2264340 2264356 2264373 2264391 2264393 2264409 2264426 2264441 2264665 2267117 2267459 2267647 2270082 2270084 2270099 2270477 2270479 2270579 2270601 2270605 2270627 2273068 2273541 2273559 2276044 2276055 2276501 2276521 2277535 2283524 2286513 2289498 2293987 2296980 2299978 2302967 2308958 2310447 2313440 2316434 2319425 2319429 2322416 2322420 2323909 2323911 2323914 2326909 ];
L = superpixels(X,12100);
BW = lazysnapping(X,L,foregroundInd,backgroundInd);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end
